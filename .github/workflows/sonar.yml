name: Sonar

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: actions/setup-java@v4
      with:
        java-version: '21' # The OpenJDK version to make available on the path
        distribution: 'microsoft'
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
            8.0.x
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        cache: true
        cache-dependency-path: tests/Arbor.Build.Tests.Integration
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Start sonar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"niklaslundberg_Arbor.Build" /o:"niklaslundberg" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" "/d:sonar.cs.opencover.reportsPaths=$($pwd)\Artifacts\TestReports\Coverage\*.opencover.xml" "/d:sonar.cs.vstest.reportsPaths=$($pwd)\Artifacts\TestReports\Tests\*.trx"
          dotnet build Arbor.Build.sln
          Get-ChildItem -Path tests -Recurse -Filter *.csproj | ForEach-Object { $fileName = $_.FullName; $name = $_.Name; dotnet test $fileName /p:CollectCoverage=true /p:CoverletOutputFormat=opencover "/p:CoverletOutput=$($pwd)\Artifacts\TestReports\Coverage\$($name).opencover.xml" --logger "trx;LogFileName=$($pwd)\Artifacts\TestReports\Tests\$($name).trx" }
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
